jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push frontend Docker image
      env:
        NODE_ENV: production
        REACT_APP_API_URL_PROD: ${{ secrets.REACT_APP_API_URL_PROD }}
      run: |
        cd ie32/frontend
        docker build --platform linux/amd64 --build-arg REACT_APP_API_URL_PROD=${{ secrets.REACT_APP_API_URL_PROD }} -t ${{ secrets.DOCKER_USERNAME }}/frontendie32:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/frontendie32:latest

    - name: Build and push backend Docker image
      env:
        NODE_ENV: production
      run: |
        cd ie32/backend
        docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/backendie32:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/backendie32:latest

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
        chmod 400 ec2-key.pem
        scp -o StrictHostKeyChecking=no -i ec2-key.pem deploy.sh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} bash /home/${{ secrets.EC2_USER }}/deploy.sh'
